#Define Persistent Volumes object named `mongo-pv`
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-pv
  labels:
    app : local
spec:
  storageClassName: standard
  capacity:
    storage: 100Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"
  persistentVolumeReclaimPolicy : Retain
---
#  Define a Persistent Volume Claim named `mongo-pvc` that can be used by a Pod to gain access to the Persistent Volumes
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 40Mi
---
#Define a deployment named `mongodb` by using the latest mongo image from Docker Hub
#Use container port 27017.
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongodb
    version: v1
  name: mongodb
spec:
  selector:
    matchLabels:
       app: mongodb
  template :
    metadata:
      labels:
        app: mongodb
    spec:
      volumes:
        - name : db-data
          persistentVolumeClaim:
            claimName: mongo-pvc
      containers:
        - image: mongo:3.6.6
          name: mongodb
          ports:
            - containerPort: 27017
          volumeMounts:
            - mountPath : "/data/db/"
              name : db-data
---
#Define a service named `mongodb` of type ClusterIP and use the above created deployment as selector
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
spec:
  ports:
    - port: 27017
      targetPort: 27017
  selector:
    app: mongodb
    version: v1
  type: ClusterIP